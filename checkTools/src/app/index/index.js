import React from 'react'import dayjs from 'dayjs'import { inject } from 'mobx-react'import { Carousel,Spin,Input,Select,Checkbox, Icon, Form,message,Button,Table } from 'antd'import { API_SERVER } from 'constant/apis'import moment from 'moment'import style from './style.less';import * as urls from 'constant/urls'import {isN,msg} from 'util/fn'// import { list } from '../../data/data'const { Option } = Select;// console.log(list)const SLIST = ['test','debug']const FTYPE = ['.js','.css']const FINC  = []const FNINC = []@inject('mainStore')class Conf extends React.Component {  constructor(props) {    super(props)    this.store = this.props.mainStore    this.state = {      loading: false,      selDdv: false,      data: [],      selIndex:0,      filename: null,      sList: SLIST,      whole: false,    }  }  async componentDidMount() {    // if (isN(this.store.currUser)) {    //   this.props.history.push("/login")    // }else{    //   this.setState({ loading: true })    //   let r = await this.props.mainStore.post(urls.API_USER_LIST)    //   // console.log(r)    //   this.setState({ loading: false, user:r.data })    // }      }  selAdv=(e)=>{    let {selAdv} = this.state    this.setState({selAdv: !selAdv})  }  selKey =(e)=>{    this.setState({selIndex:e})  }  selFile=async(e)=>{    if (e.target.files.length > 0) {      let file = e.target.files[0]      let formData = new FormData()      formData.append('file', file)      this.setState({ loading: true })      let r = await this.props.mainStore.post(urls.API_UPLOAD,formData)      if (r.code === 200) {        console.log(r)        this.setState({ loading: false, filename:file.name, path: r.data.path })        message.info('上传工程成功')      } else {        message.error(r.msg)      }    }  }  analysis=async()=>{    let params = {      filename: this.state.path,      sList: this.state.sList,      whole: this.state.whole,    }    // console.log(params)    this.setState({ loading: true })    let r = await this.props.mainStore.post(urls.API_ANALYSIS,params)    console.log(r)    this.setState({ loading: false, data:r.data })  }  doSelSearchKey=(e)=>{    this.setState({sList:e})  }  doDelFile=(index)=>{    let {data,selIndex} = this.state    data[selIndex].list.splice(index,1)    console.log(data)    this.setState({data:data})  }  selWhole=()=>{    let {whole} = this.state    this.setState({whole:!whole})  }  render() {    let {selAdv,data,selIndex,filename,sList} = this.state        let tab = (data.length>0)?data[selIndex].list:[]    // console.log(item.roleList)    // console.log(tab,'data')    return (      <Spin spinning={this.state.loading}>        <div className="g-index">          <div className="m-hd">            <div className="m-fun" >               <span className={(selAdv)?"sel":""} onClick={this.selAdv}>高级模式</span>               {(this.state.filename!==null)&&               <span onClick={this.analysis}>检索分析</span>}            </div>            <div className="m-menu">              <div className="m-sect">                <label>项目目录</label>                <span className="m-filename">{isN(filename)?'尚未选择工程':filename}</span>                <input type="file" onChange={this.selFile}></input>                <div className="m-file">选择工程</div>              </div>              <div className="m-sect">                <label>搜索关键字</label>                <Select mode="tags" style={{ width: '100%' }} defaultValue={SLIST} onChange={this.doSelSearchKey}>                  {sList.map((item,i)=>                    <Option value={item} key={i}>{item}</Option>                  )}                </Select>                <div className="m-tip">                  <span className={(this.state.whole)?'sel':''} onClick={this.selWhole}>WD</span>                </div>              </div>                          </div>            {(selAdv)&&            <>              <div className="m-menu">                <div className="m-sect">                  <label>文件类型</label>                  <Select mode="tags"                     style={{ width: '100%' }}                    defaultValue={FTYPE} >                    {FTYPE.map((item,i)=>                      <Option value={item}>{item}</Option>                    )}                  </Select>                </div>                <div className="m-sect">                  <label>文件名包含</label>                  <Select mode="tags"                     style={{ width: '100%' }}                    defaultValue={FINC} >                    {FINC.map((item,i)=>                      <Option value={item}>{item}</Option>                    )}                  </Select>                </div>              </div>              <div className="m-menu">                <div className="m-sect">                  <label>文件名不包含</label>                  <Select mode="tags"                     style={{ width: '100%' }}                    defaultValue={FINC} >                    {FINC.map((item,i)=>                      <Option value={item}>{item}</Option>                    )}                  </Select>                </div>              </div>            </>}          </div>          <div className="m-bd">            <div className="m-tab">              {data.map((item,i)=>                <span key={i} className={(selIndex===i)?'sel':''} onClick={this.selKey.bind(this,i)}>{item.key}</span>              )}            </div>            <div className="m-ret">              {tab.map((file,j)=>                <div className="m-sect" key={j}>                  <div className="m-tl">                    {file.file}                    <div className="m-del" onClick={this.doDelFile.bind(this,j)}></div>                  </div>                  {file.list.map((line,k)=>                    <div className="m-line" key={k}>                      <label>第{line.id}行：</label>                      <div dangerouslySetInnerHTML ={{__html:line.line}}></div>                    </div>                  )}                </div>              )}            </div>          </div>               </div>      </Spin>    );  }}export default Form.create()(Conf)